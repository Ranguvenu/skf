{"version":3,"file":"lsreportconfig.min.js","sources":["../src/lsreportconfig.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Configured the reports on dashboard when we install plugin.\n *\n * @module     block_learnerscript/lsreportconfig\n * @copyright  2023 Moodle India Information Solutions Private Limited\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/ajax',\n    'core/str',\n    'jqueryui'\n], function($, Ajax, Str) {\n    var lsreportconfig = {\n        slideIndex: 1,\n        currentSlide: function(currentSlideIndex) {\n            lsreportconfig.lsreportslideshow(lsreportconfig.slideIndex = currentSlideIndex);\n        },\n\n        progressbar: $(\"#progressbar\"),\n\n        lsreportslideshow: function(currentSlideIndex) {\n            var i;\n            var slides = document.getElementsByClassName(\"mySlides\");\n            if (currentSlideIndex > slides.length) {\n                lsreportconfig.slideIndex = 1;\n            }\n            if (currentSlideIndex < 1) {\n                lsreportconfig.slideIndex = slides.length;\n            }\n            for (i = 0; i < slides.length; i++) {\n                slides[i].style.display = \"none\";\n            }\n            slides[lsreportconfig.slideIndex - 1].style.display = \"block\";\n            setTimeout(function(){\n                if (lsreportconfig.slideIndex >= slides.length) {\n                    lsreportconfig.currentSlide(1);\n                } else {\n                    lsreportconfig.lsreportslideshow(lsreportconfig.slideIndex++) ;\n                }\n            }, 3000);\n        },\n        lsconfigimportprogress: function(args){\n            var total = args.total;\n            var current = args.current;\n            var errorreportspositiondata = args.errorreportspositiondata;\n            var lastreportposition = args.lastreportposition;\n            var promise = Ajax.call([{\n                methodname: 'block_learnerscript_importreports',\n                    args: {\n                        total: total,\n                        current: current,\n                        errorreportspositiondata: errorreportspositiondata,\n                        lastreportposition: lastreportposition\n                    },\n                }], false);\n            promise[0].done(function(response){\n                var resp = $.parseJSON(response);\n                lsreportconfig.progressbar.progressbar(\"value\", resp.percent);\n                if (resp.percent < 100) {\n                    if (resp.current && resp.current > 0) {\n                        args.current = resp.current;\n                    } else {\n                        args.current = args.current + 1;\n                    }\n                    setTimeout(function(){\n                        lsreportconfig.lsconfigimportprogress(args);\n                    }, 500);\n                }\n            });\n        },\n        lsconfigresetprogress: function(step) {\n            var promise = Ajax.call([{\n                methodname: 'block_learnerscript_resetlsconfig',\n                    args: {\n                        step : step\n                    },\n                }], false);\n            promise[0].done(function(response){\n                var resp = $.parseJSON(response);\n                lsreportconfig.progressbar.progressbar(\"value\", resp.percent);\n                if (resp.percent == 100) {\n                    window.location.href = M.cfg.wwwroot + '/blocks/learnerscript/lsconfig.php?import=1';\n                }\n                if (resp.percent < 100) {\n                    if (resp.next && resp.next > 0) {\n                        step = resp.next;\n                    }\n                    setTimeout(function(){\n                        lsreportconfig.lsconfigresetprogress(step);\n                    }, 500);\n                }\n            });\n        },\n        lsreportconfigimport: function (){\n            var promise = Ajax.call([{\n                methodname: 'block_learnerscript_lsreportconfigimport',\n                    args: {\n                    },\n                }]);\n            promise[0].done(function(){\n                Str.get_string('messagehandler', 'block_learnerscript').then(function(s) {\n                    return s;\n                });\n            });\n        }\n    };\n    return {\n        init: function(args, status) {\n            lsreportconfig.progressbar.progressbar({\n                    value: false,\n                    change: function() {\n                    },\n                    complete: function() {\n                        $('#reportdashboardnav').show(500);\n                    }\n                });\n            if ($('.mySlides').length > 0) {\n                lsreportconfig.lsreportslideshow(1);\n            }\n            if (status == 'import') {\n                lsreportconfig.lsconfigimportprogress(args);\n            } else if (status == 'reset') {\n                lsreportconfig.lsconfigresetprogress(1);\n            }\n            window.onbeforeunload = lsreportconfig.lsreportconfigimport;\n        },\n    };\n});\n"],"names":["define","$","Ajax","Str","lsreportconfig","slideIndex","currentSlide","currentSlideIndex","lsreportslideshow","progressbar","i","slides","document","getElementsByClassName","length","style","display","setTimeout","lsconfigimportprogress","args","total","current","errorreportspositiondata","lastreportposition","call","methodname","done","response","resp","parseJSON","percent","lsconfigresetprogress","step","window","location","href","M","cfg","wwwroot","next","lsreportconfigimport","get_string","then","s","init","status","value","change","complete","show","onbeforeunload"],"mappings":";;;;;;;AAsBAA,4CAAO,CAAC,SACJ,YACA,WACA,aACD,SAASC,EAAGC,KAAMC,KACjB,IAAIC,eAAiB,CACjBC,WAAY,EACZC,aAAc,SAASC,mBACnBH,eAAeI,kBAAkBJ,eAAeC,WAAaE,oBAGjEE,YAAaR,EAAE,gBAEfO,kBAAmB,SAASD,mBACxB,IAAIG,EACAC,OAASC,SAASC,uBAAuB,YAO7C,IANIN,kBAAoBI,OAAOG,SAC3BV,eAAeC,WAAa,GAE5BE,kBAAoB,IACpBH,eAAeC,WAAaM,OAAOG,QAElCJ,EAAI,EAAGA,EAAIC,OAAOG,OAAQJ,IAC3BC,OAAOD,GAAGK,MAAMC,QAAU,OAE9BL,OAAOP,eAAeC,WAAa,GAAGU,MAAMC,QAAU,QACtDC,YAAW,WACHb,eAAeC,YAAcM,OAAOG,OACpCV,eAAeE,aAAa,GAE5BF,eAAeI,kBAAkBJ,eAAeC,gBAErD,MAEPa,uBAAwB,SAASC,MAC7B,IAAIC,MAAQD,KAAKC,MACbC,QAAUF,KAAKE,QACfC,yBAA2BH,KAAKG,yBAChCC,mBAAqBJ,KAAKI,mBAChBrB,KAAKsB,KAAK,CAAC,CACrBC,WAAY,oCACRN,KAAM,CACFC,MAAOA,MACPC,QAASA,QACTC,yBAA0BA,yBAC1BC,mBAAoBA,uBAExB,GACA,GAAGG,MAAK,SAASC,UACrB,IAAIC,KAAO3B,EAAE4B,UAAUF,UACvBvB,eAAeK,YAAYA,YAAY,QAASmB,KAAKE,SACjDF,KAAKE,QAAU,MACXF,KAAKP,SAAWO,KAAKP,QAAU,EAC/BF,KAAKE,QAAUO,KAAKP,QAEpBF,KAAKE,QAAUF,KAAKE,QAAU,EAElCJ,YAAW,WACPb,eAAec,uBAAuBC,QACvC,UAIfY,sBAAuB,SAASC,MACd9B,KAAKsB,KAAK,CAAC,CACrBC,WAAY,oCACRN,KAAM,CACFa,KAAOA,SAEX,GACA,GAAGN,MAAK,SAASC,UACrB,IAAIC,KAAO3B,EAAE4B,UAAUF,UACvBvB,eAAeK,YAAYA,YAAY,QAASmB,KAAKE,SACjC,KAAhBF,KAAKE,UACLG,OAAOC,SAASC,KAAOC,EAAEC,IAAIC,QAAU,+CAEvCV,KAAKE,QAAU,MACXF,KAAKW,MAAQX,KAAKW,KAAO,IACzBP,KAAOJ,KAAKW,MAEhBtB,YAAW,WACPb,eAAe2B,sBAAsBC,QACtC,UAIfQ,qBAAsB,WACJtC,KAAKsB,KAAK,CAAC,CACrBC,WAAY,2CACRN,KAAM,MAGN,GAAGO,MAAK,WACZvB,IAAIsC,WAAW,iBAAkB,uBAAuBC,MAAK,SAASC,GAClE,OAAOA,UAKvB,MAAO,CACHC,KAAM,SAASzB,KAAM0B,QACjBzC,eAAeK,YAAYA,YAAY,CAC/BqC,OAAO,EACPC,OAAQ,aAERC,SAAU,WACN/C,EAAE,uBAAuBgD,KAAK,QAGtChD,EAAE,aAAaa,OAAS,GACxBV,eAAeI,kBAAkB,GAEvB,UAAVqC,OACAzC,eAAec,uBAAuBC,MACrB,SAAV0B,QACPzC,eAAe2B,sBAAsB,GAEzCE,OAAOiB,eAAiB9C,eAAeoC,sBAGnD"}