{"version":3,"file":"dataTables.responsive.min.js","sources":["../../src/datatables/dataTables.responsive.js"],"sourcesContent":["/*! Responsive 2.5.0\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'block_learnerscript/datatables/jquery.dataTables'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('block_learnerscript/datatables/jquery.dataTables')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.5.0\n * @author      SpryMedia Ltd\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function (settings, opts) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif (!DataTable.versionCheck || !DataTable.versionCheck('1.10.10')) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.10 or newer';\n\t}\n\n\tthis.s = {\n\t\tchildNodeStore: {},\n\t\tcolumns: [],\n\t\tcurrent: [],\n\t\tdt: new DataTable.Api(settings)\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif (this.s.dt.settings()[0].responsive) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif (opts && typeof opts.details === 'string') {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if (opts && opts.details === false) {\n\t\topts.details = { type: false };\n\t}\n\telse if (opts && opts.details === true) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend(true, {}, Responsive.defaults, DataTable.defaults.responsive, opts);\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend(Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on(\n\t\t\t'resize.dtr orientationchange.dtr',\n\t\t\tDataTable.util.throttle(function () {\n\t\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\t\tvar width = $(window).innerWidth();\n\n\t\t\t\tif (width !== oldWindowWidth) {\n\t\t\t\t\tthat._resize();\n\t\t\t\t\toldWindowWidth = width;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg(\n\t\t\tdtPrivateSettings,\n\t\t\t'aoRowCreatedCallback',\n\t\t\tfunction (tr, data, idx) {\n\t\t\t\tif ($.inArray(false, that.s.current) !== -1) {\n\t\t\t\t\t$('>td, >th', tr).each(function (i) {\n\t\t\t\t\t\tvar idx = dt.column.index('toData', i);\n\n\t\t\t\t\t\tif (that.s.current[idx] === false) {\n\t\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Destroy event handler\n\t\tdt.on('destroy.dtr', function () {\n\t\t\tdt.off('.dtr');\n\t\t\t$(dt.table().body()).off('.dtr');\n\t\t\t$(window).off('resize.dtr orientationchange.dtr');\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each(that.s.current, function (i, val) {\n\t\t\t\tif (val === false) {\n\t\t\t\t\tthat._setColumnVis(i, true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort(function (a, b) {\n\t\t\treturn a.width < b.width ? 1 : a.width > b.width ? -1 : 0;\n\t\t});\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif (details.type !== false) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on('column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif (that._timer) {\n\t\t\t\t\tclearTimeout(that._timer);\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout(function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100);\n\t\t\t});\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on('draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t});\n\n\t\t\t$(dt.table().node()).addClass('dtr-' + details.type);\n\t\t}\n\n\t\tdt.on('column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t});\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on('column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// DT2 let's us tell it if we are hiding columns\n\t\tdt.on('column-calc.dt', function (e, d) {\n\t\t\tvar curr = that.s.current;\n\n\t\t\tfor (var i = 0; i < curr.length; i++) {\n\t\t\t\tvar idx = d.visible.indexOf(i);\n\n\t\t\t\tif (curr[i] === false && idx >= 0) {\n\t\t\t\t\td.visible.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on('preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every(function () {\n\t\t\t\tif (this.child.isShown()) {\n\t\t\t\t\trowIds.push(this.id(true));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdt.one('draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows(rowIds).every(function () {\n\t\t\t\t\tthat._detailsDisplay(this, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._controlClass();\n\t\t}).on('init.dtr', function (e, settings, details) {\n\t\t\tif (e.namespace !== 'dt') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\n\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t// column sizing\n\t\t\tif ($.inArray(false, that.s.current)) {\n\t\t\t\tdt.columns.adjust();\n\t\t\t}\n\t\t});\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Get and store nodes from a cell - use for node moving renderers\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodes: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (this.s.childNodeStore[name]) {\n\t\t\treturn this.s.childNodeStore[name];\n\t\t}\n\n\t\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\t\tvar nodes = [];\n\t\tvar children = dt.cell(row, col).node().childNodes;\n\t\tfor (var i = 0, ien = children.length; i < ien; i++) {\n\t\t\tnodes.push(children[i]);\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = nodes;\n\n\t\treturn nodes;\n\t},\n\n\t/**\n\t * Restore nodes from the cache to a table cell\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodesRestore: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (!this.s.childNodeStore[name]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar node = dt.cell(row, col).node();\n\t\tvar store = this.s.childNodeStore[name];\n\t\tvar parent = store[0].parentNode;\n\t\tvar parentChildren = parent.childNodes;\n\t\tvar a = [];\n\n\t\tfor (var i = 0, ien = parentChildren.length; i < ien; i++) {\n\t\t\ta.push(parentChildren[i]);\n\t\t}\n\n\t\tfor (var j = 0, jen = a.length; j < jen; j++) {\n\t\t\tnode.appendChild(a[j]);\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = undefined;\n\t},\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function (breakpoint) {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map(function (col, idx) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort(function (a, b) {\n\t\t\t\tif (a.priority !== b.priority) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t});\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map(columns, function (col, i) {\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null\n\t\t\t\t? false\n\t\t\t\t: col.auto === true\n\t\t\t\t? '-'\n\t\t\t\t: $.inArray(breakpoint, col.includeIn) !== -1;\n\t\t});\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (display[i] === true) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor (i = 0, ien = order.length; i < ien; i++) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif (display[colIdx] === '-' && !columns[colIdx].control && columns[colIdx].minWidth) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif (empty || usedWidth - columns[colIdx].minWidth < 0) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (!columns[i].control && !columns[i].never && display[i] === false) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif (display[i] === 'not-visible') {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ($.inArray(true, display) === -1) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function () {\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt\n\t\t\t.columns()\n\t\t\t.eq(0)\n\t\t\t.map(function (i) {\n\t\t\t\tvar column = this.column(i);\n\t\t\t\tvar className = column.header().className;\n\t\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\t\t\t\tvar dataPriority = column.header().getAttribute('data-priority');\n\n\t\t\t\tif (priority === undefined) {\n\t\t\t\t\tpriority =\n\t\t\t\t\t\tdataPriority === undefined || dataPriority === null\n\t\t\t\t\t\t\t? 10000\n\t\t\t\t\t\t\t: dataPriority * 1;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tincludeIn: [],\n\t\t\t\t\tauto: false,\n\t\t\t\t\tcontrol: false,\n\t\t\t\t\tnever: className.match(/\\b(dtr\\-)?never\\b/) ? true : false,\n\t\t\t\t\tpriority: priority\n\t\t\t\t};\n\t\t\t});\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function (colIdx, name) {\n\t\t\tvar includeIn = columns[colIdx].includeIn;\n\n\t\t\tif ($.inArray(name, includeIn) === -1) {\n\t\t\t\tincludeIn.push(name);\n\t\t\t}\n\t\t};\n\n\t\tvar column = function (colIdx, name, operator, matched) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif (!operator) {\n\t\t\t\tcolumns[colIdx].includeIn.push(name);\n\t\t\t}\n\t\t\telse if (operator === 'max-') {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width <= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'min-') {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width >= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'not-') {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].name.indexOf(matched) === -1) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each(function (col, i) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor (var k = 0, ken = classNames.length; k < ken; k++) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif (className === 'all' || className === 'dtr-all') {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map(breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (className === 'none' || className === 'dtr-none' || col.never) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (className === 'control' || className === 'dtr-control') {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each(breakpoints, function (j, breakpoint) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp(\n\t\t\t\t\t\t'(min\\\\-|max\\\\-|not\\\\-)?(' + brokenPoint[0] + ')(\\\\-[_a-zA-Z0-9])?'\n\t\t\t\t\t);\n\t\t\t\t\tvar match = className.match(re);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif (match[2] === brokenPoint[0] && match[3] === '-' + brokenPoint[1]) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn(i, breakpoint.name, match[1], match[2] + match[3]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (match[2] === brokenPoint[0] && !match[3]) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn(i, breakpoint.name, match[1], match[2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif (!hasClass) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t});\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function () {\n\t\tif (this.c.details.type === 'inline') {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction (idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{ page: 'current' }\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, { page: 'current' }).nodes().to$().addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function (row, update) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\t\tvar event = function (res) {\n\t\t\t$(row.node()).toggleClass('parent', res !== false);\n\t\t\t$(dt.table().node()).triggerHandler('responsive-display.dt', [dt, row, res, update]);\n\t\t};\n\n\t\tif (details && details.type !== false) {\n\t\t\tvar renderer =\n\t\t\t\ttypeof details.renderer === 'string'\n\t\t\t\t\t? Responsive.renderer[details.renderer]()\n\t\t\t\t\t: details.renderer;\n\n\t\t\tvar res = details.display(\n\t\t\t\trow,\n\t\t\t\tupdate,\n\t\t\t\tfunction () {\n\t\t\t\t\treturn renderer.call(that, dt, row[0], that._detailsObj(row[0]));\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tevent(false);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (typeof res === 'boolean') {\n\t\t\t\tevent(res);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif (details.type === 'inline') {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t});\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$(dt.table().body()).on('keyup.dtr', 'td, th', function (e) {\n\t\t\tif (e.keyCode === 13 && $(this).data('dtr-keyboard')) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t});\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif (target !== undefined || target !== null) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$(dt.table().body()).on('click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t// then take no action\n\t\t\t\tif (!$(dt.table().node()).hasClass('collapsed')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\tif ($.inArray($(this).closest('tr').get(0), dt.rows().nodes().toArray()) === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\tif (typeof target === 'number') {\n\t\t\t\t\tvar targetIdx = target < 0 ? dt.columns().eq(0).length + target : target;\n\n\t\t\t\t\tif (dt.cell(this).index().column !== targetIdx) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\tvar row = dt.row($(this).closest('tr'));\n\n\t\t\t\t// Check event type to do an action\n\t\t\t\tif (e.type === 'click') {\n\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t// the renderer)\n\t\t\t\t\tthat._detailsDisplay(row, false);\n\t\t\t\t}\n\t\t\t\telse if (e.type === 'mousedown') {\n\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t}\n\t\t\t\telse if (e.type === 'mouseup') {\n\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function (rowIdx) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.columns, function (col, i) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif (col.never || col.control) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[i];\n\n\t\t\treturn {\n\t\t\t\tclassName: dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata: dt.cell(rowIdx, i).render(that.c.orthogonal),\n\t\t\t\thidden: dt.column(i).visible() && !that.s.current[i],\n\t\t\t\trowIndex: rowIdx,\n\t\t\t\ttitle: dtCol.sTitle !== null ? dtCol.sTitle : $(dt.column(i).header()).text()\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function (name) {\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor (var i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\tif (breakpoints[i].name === name) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows({ page: 'current' }).iterator('row', function (settings, idx) {\n\t\t\tthat._detailsDisplay(dt.row(idx), true);\n\t\t});\n\t},\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor (i = breakpoints.length - 1; i >= 0; i--) {\n\t\t\tif (width <= breakpoints[i].width) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity(breakpoint);\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\tcolumnsVis[i] === false &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!dt.column(i).visible() === false\n\t\t\t) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(dt.table().node()).toggleClass('collapsed', collapsedClass);\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\n\t\tdt.columns()\n\t\t\t.eq(0)\n\t\t\t.each(function (colIdx, i) {\n\t\t\t\tif (columnsVis[i] === true) {\n\t\t\t\t\tvisible++;\n\t\t\t\t}\n\n\t\t\t\tif (forceRedraw || columnsVis[i] !== oldVis[i]) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tthat._setColumnVis(colIdx, columnsVis[i]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Always need to update the display, regardless of if it has changed or not, so nodes\n\t\t// can be re-inserted for listHiddenNodes\n\t\tthis._redrawChildren();\n\n\t\tif (changed) {\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger('responsive-resize.dt', [dt, this.s.current]);\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif (dt.page.info().recordsDisplay === 0) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar that = this;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif (!this.c.auto) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif (\n\t\t\t$.inArray(\n\t\t\t\ttrue,\n\t\t\t\t$.map(columns, function (c) {\n\t\t\t\t\treturn c.auto;\n\t\t\t\t})\n\t\t\t) === -1\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Need to restore all children. They will be reinstated by a re-render\n\t\tif (!$.isEmptyObject(this.s.childNodeStore)) {\n\t\t\t$.each(this.s.childNodeStore, function (key) {\n\t\t\t\tvar idx = key.split('-');\n\n\t\t\t\tthat._childNodesRestore(dt, idx[0] * 1, idx[1] * 1);\n\t\t\t});\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable = dt.table().node().cloneNode(false);\n\t\tvar clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(clonedTable);\n\t\tvar clonedBody = $(dt.table().body()).clone(false, false).empty().appendTo(clonedTable); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tvar headerCells = dt\n\t\t\t.columns()\n\t\t\t.header()\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t})\n\t\t\t.to$()\n\t\t\t.clone(false)\n\t\t\t.css('display', 'table-cell')\n\t\t\t.css('width', 'auto')\n\t\t\t.css('min-width', 0);\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append($(dt.rows({ page: 'current' }).nodes()).clone(false))\n\t\t\t.find('th, td')\n\t\t\t.css('display', '');\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif (footer) {\n\t\t\tvar clonedFooter = $(footer.cloneNode(false)).appendTo(clonedTable);\n\t\t\tvar footerCells = dt\n\t\t\t\t.columns()\n\t\t\t\t.footer()\n\t\t\t\t.filter(function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t})\n\t\t\t\t.to$()\n\t\t\t\t.clone(false)\n\t\t\t\t.css('display', 'table-cell');\n\n\t\t\t$('<tr/>').append(footerCells).appendTo(clonedFooter);\n\t\t}\n\n\t\t$('<tr/>').append(headerCells).appendTo(clonedHeader);\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif (this.c.details.type === 'inline') {\n\t\t\t$(clonedTable).addClass('dtr-inline collapsed');\n\t\t}\n\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$(clonedTable).find('[name]').removeAttr('name');\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$(clonedTable).css('position', 'relative');\n\n\t\tvar inserted = $('<div/>')\n\t\t\t.css({\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t})\n\t\t\t.append(clonedTable);\n\n\t\tinserted.insertBefore(dt.table().node());\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each(function (i) {\n\t\t\tvar idx = dt.column.index('fromVisible', i);\n\t\t\tcolumns[idx].minWidth = this.offsetWidth || 0;\n\t\t});\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function () {\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t});\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function (col, showHide) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$(dt.column(col).header()).css('display', display).toggleClass('dtr-hidden', !showHide);\n\n\t\t$(dt.column(col).footer()).css('display', display).toggleClass('dtr-hidden', !showHide);\n\n\t\tdt.column(col).nodes().to$().css('display', display).toggleClass('dtr-hidden', !showHide);\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif (!$.isEmptyObject(this.s.childNodeStore)) {\n\t\t\tdt.cells(null, col)\n\t\t\t\t.indexes()\n\t\t\t\t.each(function (idx) {\n\t\t\t\t\tthat._childNodesRestore(dt, idx.row, idx.column);\n\t\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells({ page: 'current' }).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter('[data-dtr-keyboard]').removeData('[data-dtr-keyboard]');\n\n\t\tif (typeof target === 'number') {\n\t\t\tdt.cells(null, target, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif (target === 'td:first-child, th:first-child') {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$(target, dt.rows({ page: 'current' }).nodes())\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t}\n});\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop', width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function (row, update, render) {\n\t\tif (update) {\n\t\t\tif ($(row.node()).hasClass('parent')) {\n\t\t\t\trow.child(render(), 'child').show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!row.child.isShown()) {\n\t\t\t\trow.child(render(), 'child').show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child(false);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function (row, update, render) {\n\t\tif ((!update && row.child.isShown()) || !row.responsive.hasHidden()) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child(false);\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child(render(), 'child').show();\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function (options) {\n\t\treturn function (row, update, render, closeCallback) {\n\t\t\tif (!update) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off('keypress.dtr');\n\t\t\t\t\t$(row.node()).removeClass('parent');\n\n\t\t\t\t\tcloseCallback();\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t\t\t.data('dtr-row-idx', row.index())\n\t\t\t\t\t\t\t\t\t.append(render())\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div class=\"dtr-modal-close\">&times;</div>').click(function () {\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-background\"/>').click(function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo('body');\n\n\t\t\t\t$(row.node()).addClass('parent');\n\n\t\t\t\t$(document).on('keyup.dtr', function (e) {\n\t\t\t\t\tif (e.keyCode === 27) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar modal = $('div.dtr-modal-content');\n\n\t\t\t\tif (modal.length && row.index() === modal.data('dtr-row-idx')) {\n\t\t\t\t\tmodal.empty().append(render());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Modal not shown, nothing to update\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options && options.header) {\n\t\t\t\t$('div.dtr-modal-content').prepend('<h2>' + options.header(row) + '</h2>');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\t}\n};\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar that = this;\n\t\t\tvar ul = $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>');\n\t\t\tvar found = false;\n\n\t\t\tvar data = $.each(columns, function (i, col) {\n\t\t\t\tif (col.hidden) {\n\t\t\t\t\tvar klass = col.className ? 'class=\"' + col.className + '\"' : '';\n\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<span class=\"dtr-data\"/>').append(\n\t\t\t\t\t\t\t\tthat._childNodes(api, col.rowIndex, col.columnIndex)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) // api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo(ul);\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn found ? ul : false;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className ? 'class=\"' + col.className + '\"' : '';\n\n\t\t\t\treturn col.hidden\n\t\t\t\t\t? '<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'<span class=\"dtr-data\">' +\n\t\t\t\t\t\t\tcol.data +\n\t\t\t\t\t\t\t'</span>' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t: '';\n\t\t\t}).join('');\n\n\t\t\treturn data\n\t\t\t\t? $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>').append(data)\n\t\t\t\t: false;\n\t\t};\n\t},\n\n\ttableAll: function (options) {\n\t\toptions = $.extend(\n\t\t\t{\n\t\t\t\ttableClass: ''\n\t\t\t},\n\t\t\toptions\n\t\t);\n\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className ? 'class=\"' + col.className + '\"' : '';\n\n\t\t\t\treturn (\n\t\t\t\t\t'<tr ' +\n\t\t\t\t\tklass +\n\t\t\t\t\t' data-dt-row=\"' +\n\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t'\">' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.title +\n\t\t\t\t\t':' +\n\t\t\t\t\t'</td> ' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.data +\n\t\t\t\t\t'</td>' +\n\t\t\t\t\t'</tr>'\n\t\t\t\t);\n\t\t\t}).join('');\n\n\t\t\treturn $('<table class=\"' + options.tableClass + ' dtr-details\" width=\"100%\"/>').append(\n\t\t\t\tdata\n\t\t\t);\n\t\t};\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register('responsive()', function () {\n\treturn this;\n});\n\nApi.register('responsive.index()', function (li) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow: li.parent().data('dtr-index')\n\t};\n});\n\nApi.register('responsive.rebuild()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t});\n});\n\nApi.register('responsive.recalc()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t});\n});\n\nApi.register('responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive\n\t\t? $.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1\n\t\t: false;\n});\n\nApi.registerPlural('columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n\treturn this.iterator(\n\t\t'column',\n\t\tfunction (settings, column) {\n\t\t\treturn settings._responsive\n\t\t\t\t? settings._responsive._responsiveOnlyHidden()[column]\n\t\t\t\t: false;\n\t\t},\n\t\t1\n\t);\n});\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.5.0';\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('preInit.dt.dtr', function (e, settings, json) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tif (\n\t\t$(settings.nTable).hasClass('responsive') ||\n\t\t$(settings.nTable).hasClass('dt-responsive') ||\n\t\tsettings.oInit.responsive ||\n\t\tDataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif (init !== false) {\n\t\t\tnew Responsive(settings, $.isPlainObject(init) ? init : {});\n\t\t}\n\t}\n});\n\n\nreturn DataTable;\n}));"],"names":["factory","define","amd","$","window","document","exports","jq","require","cjsRequires","root","fn","dataTable","module","jQuery","undefined","DataTable","Responsive","settings","opts","versionCheck","this","s","childNodeStore","columns","current","dt","Api","responsive","details","type","c","extend","defaults","_constructor","prototype","that","dtPrivateSettings","oldWindowWidth","innerWidth","_responsive","on","util","throttle","width","_resize","oApi","_fnCallbackReg","tr","data","idx","inArray","each","i","column","index","css","off","table","body","cells","nodes","to$","removeClass","val","_setColumnVis","breakpoints","sort","a","b","_classLogic","_resizeAuto","_detailsInit","_timer","clearTimeout","setTimeout","_redrawChildren","node","addClass","e","d","curr","length","visible","indexOf","splice","rowIds","rows","every","child","isShown","push","id","one","_detailsDisplay","_controlClass","namespace","adjust","_childNodes","row","col","name","children","cell","childNodes","ien","_childNodesRestore","parentChildren","parentNode","j","jen","appendChild","_columnsVisiblity","breakpoint","order","map","columnIdx","priority","display","auto","minWidth","includeIn","requiredWidth","scrolling","oScroll","bar","sY","sX","iBarWidth","usedWidth","container","offsetWidth","control","empty","colIdx","showControl","never","eq","className","header","aoColumns","responsivePriority","dataPriority","getAttribute","match","add","operator","matched","size","_find","classNames","split","hasClass","k","ken","trim","brokenPoint","re","RegExp","columnsVis","firstVisible","page","filter","update","event","res","toggleClass","triggerHandler","renderer","call","_detailsObj","target","_tabIndexes","keyCode","click","selector","closest","get","toArray","targetIdx","trigger","rowIdx","dtCol","sClass","columnIndex","render","orthogonal","hidden","rowIndex","title","sTitle","text","iterator","forceRedraw","oldVis","slice","collapsedClass","changed","info","recordsDisplay","attr","isEmptyObject","key","clonedTable","cloneNode","clonedHeader","appendTo","clonedBody","clone","style","headerCells","append","find","footer","clonedFooter","footerCells","removeAttr","inserted","height","overflow","clear","insertBefore","remove","_responsiveOnlyHidden","v","showHide","indexes","ctx","removeData","iTabIndex","Infinity","childRow","show","childRowImmediate","hasHidden","modal","options","closeCallback","close","stopPropagation","prepend","listHiddenNodes","api","ul","found","klass","listHidden","join","tableAll","tableClass","register","li","parent","context","registerPlural","version","json","nTable","oInit","init","isPlainObject"],"mappings":"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"}